% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/other_exported_functions.R
\name{ExtendBenchmarksSeries}
\alias{ExtendBenchmarksSeries}
\title{Extend benchmarks series of one year}
\usage{
ExtendBenchmarksSeries(
  benchmarks_ts,
  indicators_ts,
  f_bi_ts,
  conversion = c("Sum", "Average")
)
}
\arguments{
\item{benchmarks_ts}{set of benchmarks time series that will be disaggregated.
It must be a mts object.}

\item{indicators_ts}{set of corresponding indicators time series used for
temporal disaggregation. It must be a mts
object. If no indicator exists, the indicator series
should be defined as NA or any constant so that the
number of columns is identical to this of the benchmarks.
Name and order of the columns must be identical to those
of the benchmarks too.}

\item{f_bi_ts}{set of forecasts to use for extrapolation when enhanced = TRUE.
They can be generated by running the function
'ForecastAnnualBIRatios'.}

\item{conversion}{type of consistency between the annual benchmarks and the
infra-annual indicators}
}
\value{
ts object with extended benchmarks_ts
}
\description{
Extend benchmarks series of one year
}
\examples{
data(nbb_data)
B1G_Y_data <- nbb_data$B1G_Y_data
TURN_Q_data <- nbb_data$TURN_Q_data
colnames(B1G_Y_data) <- colnames(TURN_Q_data) <- c("DATE", "CE", "FF", "HH") # mandatory to match colnames

# convert data to ts object
B1G_Y_data_ts <- ts(B1G_Y_data[,-1], frequency = 1, start = c(2009,1))
TURN_Q_data_ts <- ts(TURN_Q_data[,-1], frequency = 4, start = c(2009,1))

# forecast of annual BI ratio (only used when enhanced=TRUE)
bi_ts <- CalcBIratio(B1G_Y_data_ts, TURN_Q_data_ts)
data(table_rw)
f_bi_ts <- ForecastAnnualBIRatios(bi_ts, critical.value = table_rw[series_length == nrow(bi_ts), q.95])$f_bi_ts

B1G_Y_data_ts_EXTENDED <- ExtendBenchmarksSeries(B1G_Y_data_ts, TURN_Q_data_ts, f_bi_ts)

}
