% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/other_exported_functions.R
\name{CalcImplicitAnnualBIForecast}
\alias{CalcImplicitAnnualBIForecast}
\title{Calculate implicit forecasts of annual BI ratio.}
\usage{
CalcImplicitAnnualBIForecast(
  td_series,
  indicators_ts,
  start,
  conversion = c("Sum", "Average")
)
}
\arguments{
\item{td_series}{set of temporal disaggregated series. It must be
a mts object.}

\item{indicators_ts}{set of corresponding indicators time series used for
temporal disaggregation. It must be a mts object.}

\item{start}{a numeric value which is the first extrapolated year.}

\item{conversion}{type of consistency between the annual benchmarks and the
infra-annual indicators}
}
\value{
ts object with implicit forecasts
}
\description{
While it is defined explicitly when eDenton method is used, this is not
the case when other methods are used. This function calculates the implicit
forecast of the annual BI ratio's for the full years of extrapolation.
}
\examples{
data(nbb_data)
B1G_Y_data <- nbb_data$B1G_Y_data
TURN_Q_data <- nbb_data$TURN_Q_data
colnames(B1G_Y_data) <- colnames(TURN_Q_data) <- c("DATE", "CE", "FF", "HH") # mandatory to match colnames

# convert data to ts object
B1G_Y_data_ts <- ts(B1G_Y_data[,-1], frequency = 1, start = c(2009,1))
TURN_Q_data_ts <- ts(TURN_Q_data[,-1], frequency = 4, start = c(2009,1))

# define models
models <- c("chow-lin", "fernandez", "chow-lin")

# run td
res <- multiTDCLvar(B1G_Y_data_ts, TURN_Q_data_ts, models, conversion = "Sum")

CalcImplicitAnnualBIForecast(res$td.series, TURN_Q_data_ts, 2021)

}
