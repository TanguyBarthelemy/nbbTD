% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main_functions.R
\name{multiTDDenton}
\alias{multiTDDenton}
\title{Multiprocessing NBB-customized temporal disaggregation of time series with
Denton PFD method}
\usage{
multiTDDenton(
  benchmarks_ts,
  indicators_ts,
  enhanced = FALSE,
  f_bi_ts = NULL,
  bi_q_outliers_form = NULL,
  bi_q_manual_form = NULL,
  conversion = c("Sum", "Average")
)
}
\arguments{
\item{benchmarks_ts}{set of benchmarks time series that will be disaggregated.
It must be a mts object.}

\item{indicators_ts}{set of corresponding indicators time series used for
temporal disaggregation. It must be a mts object.
If no indicator exists, the indicator series should
be defined as NA or any constant so that the number
of columns is identical to this of the benchmarks.
Name and order of the columns must be identical to those
of the benchmarks too.}

\item{enhanced}{a boolean object. If TRUE, enhanced Denton PFD method is
performed. In such case forecasts 'f_bi_ts' should be
provided for each series. Default is FALSE.}

\item{f_bi_ts}{set of forecasts to use for extrapolation when enhanced = TRUE.
They can be generated by running the function
'ForecastAnnualBIRatios'.}

\item{bi_q_outliers_form}{set of manual outliers formatted using the function
'ValidateAndFormatBIqOutliers'}

\item{bi_q_manual_form}{set of manual infra-annual BI ratio's formatted
using the function 'ValidateFormatBIqManual'}

\item{conversion}{type of consistency between the annual benchmarks and the
infra-annual indicators}
}
\value{
an object of class "nbb.dsc.td.multiproc.edenton.output"
}
\description{
Perform temporal disaggregation of an annual to quarterly or monthly set of
time series using Denton PFD method. The user has the possibility to add
outliers (level shift) in the Benchmark-to-Indicator (BI) ratio and to import
manual BI ratio on an infra-annual basis. When enhanced = TRUE, enhanced
Denton is performed, and the user must provide the forecasted BI ratios
('f_bi_ts'). Those can be generated by first running the function
'ForecastAnnualBIRatios'.
}
\details{
Either the sum or the average consistency between the annual benchmarks and
the quarterly or monthly indicators are handled.
}
\examples{
data(nbb_data)
B1G_Y_data <- nbb_data$B1G_Y_data
TURN_Q_data <- nbb_data$TURN_Q_data
colnames(B1G_Y_data) <- colnames(TURN_Q_data) <- c("DATE", "CE", "FF", "HH") # mandatory to match colnames

# convert data to ts object
B1G_Y_data_ts <- ts(B1G_Y_data[,-1], frequency = 1, start = c(2009,1))
TURN_Q_data_ts <- ts(TURN_Q_data[,-1], frequency = 4, start = c(2009,1))

# forecast of annual BI ratio (only used when enhanced=TRUE)
bi_ts <- CalcBIratio(B1G_Y_data_ts, TURN_Q_data_ts)
data(table_rw)
f_bi_ts <- ForecastAnnualBIRatios(bi_ts, critical.value = table_rw[series_length == nrow(bi_ts), q.95])$f_bi_ts

# outliers in infra-annual BI ratios (see ?setConfig_default for more details about the structure of the original input)
bi_q_outliers <- data.frame(series_name  = "CE",
                            year = 2020,
                            quarter_month = 2,
                            intensity = 10) # keep intensity=10 by default
bi_q_outliers_form <- ValidateAndFormatBIqOutliers(bi_q_outliers, colnames(B1G_Y_data_ts), 4)

# define part of the infra-annual BI ratios manually (! manual BI ratio must be filled for each quarter/month of the year(s) !)
bi_q_manual <- data.frame(series_name  = "CE",
                           year = 2020,
                           q1_m1 = 24.2,
                           q2_m2 = 23.5,
                           q3_m3 = 24.2,
                           q4_m4 = 24.2)
bi_q_manual_form <- ValidateAndFormatBIqManual(bi_q_manual, colnames(B1G_Y_data_ts), 4)

res <- multiTDDenton(B1G_Y_data_ts, TURN_Q_data_ts, enhanced = TRUE, f_bi_ts, bi_q_outliers_form, bi_q_manual_form , conversion = "Sum")

}
